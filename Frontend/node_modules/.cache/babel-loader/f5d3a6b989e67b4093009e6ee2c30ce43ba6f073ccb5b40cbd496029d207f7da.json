{"ast":null,"code":"var _jsxFileName = \"/Users/moiz/Desktop/Signup-loginpage/Frontend/src/components/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport AuthService from \"../services/auth.service\";\nimport userData from \"./data.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst required = value => {\n  if (!value) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"invalid-feedback d-block\",\n      children: \"This field is required!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this);\n  }\n};\n\nconst Login = () => {\n  _s();\n\n  const form = useRef();\n  const checkBtn = useRef();\n  const navigate = useNavigate();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [showPassword, setShowPassword] = useState(false);\n\n  const onChangeUsername = e => {\n    setUsername(e.target.value);\n  };\n\n  const onChangePassword = e => {\n    setPassword(e.target.value);\n  };\n\n  const handleLogin = e => {\n    e.preventDefault();\n    setMessage(\"\");\n    setLoading(true);\n    form.current.validateAll();\n\n    if (checkBtn.current.context._errors.length === 0) {\n      // Check if there is a user with the provided username and password\n      const user = userData.users.find(user => user.email === username && user.password === password);\n\n      if (user) {\n        // Simulate a delay to mimic server response time (you can remove this in production)\n        setTimeout(() => {\n          AuthService.login(user); // Assuming AuthService.login() accepts a user object as an argument for successful login\n\n          navigate(\"/profile\");\n          window.location.reload();\n        }, 1000); // 1 second delay\n      } else {\n        setLoading(false);\n        setMessage(\"Invalid username or password.\");\n      }\n    } else {\n      setLoading(false);\n    }\n  };\n\n  const handleShowPassword = () => {\n    setShowPassword(prevShowPassword => !prevShowPassword);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-md-12\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card card-container\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleLogin,\n        ref: form,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            className: \"form-control\",\n            name: \"username\",\n            value: username,\n            onChange: onChangeUsername,\n            validations: [required]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              type: showPassword ? \"text\" : \"password\",\n              className: \"form-control\",\n              name: \"password\",\n              value: password,\n              onChange: onChangePassword,\n              validations: [required]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group-append\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-outline-secondary btn-sm\" // Use btn-sm class for smaller button\n                ,\n                type: \"button\",\n                onClick: handleShowPassword,\n                children: showPassword ? \"Hide\" : \"Show\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary btn-block\",\n            disabled: loading,\n            children: [loading && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"spinner-border spinner-border-sm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert alert-danger\",\n            role: \"alert\",\n            children: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"Forgetpassword\",\n            onClick: handleShowPassword,\n            style: {\n              color: \"blue\",\n              marginTop: \"10px\"\n            },\n            children: \"Forgot password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 3\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CheckButton, {\n          style: {\n            display: \"none\"\n          },\n          ref: checkBtn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"tOYSCIshlOYECoMGlKk912/75nQ=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/moiz/Desktop/Signup-loginpage/Frontend/src/components/Login.js"],"names":["React","useState","useRef","useNavigate","Form","Input","CheckButton","AuthService","userData","required","value","Login","form","checkBtn","navigate","username","setUsername","password","setPassword","loading","setLoading","message","setMessage","showPassword","setShowPassword","onChangeUsername","e","target","onChangePassword","handleLogin","preventDefault","current","validateAll","context","_errors","length","user","users","find","email","setTimeout","login","window","location","reload","handleShowPassword","prevShowPassword","color","marginTop","display"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\n\nimport AuthService from \"../services/auth.service\";\nimport userData from \"./data.json\";\n\n\n\nconst required = (value) => {\n  if (!value) {\n    return (\n      <div className=\"invalid-feedback d-block\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nconst Login = () => {\n  const form = useRef();\n  const checkBtn = useRef();\n  const navigate = useNavigate();\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [showPassword, setShowPassword] = useState(false);\n\n  const onChangeUsername = (e) => {\n    setUsername(e.target.value);\n  };\n\n  const onChangePassword = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n\n    setMessage(\"\");\n    setLoading(true);\n\n    form.current.validateAll();\n\n    if (checkBtn.current.context._errors.length === 0) {\n      // Check if there is a user with the provided username and password\n      const user = userData.users.find((user) => user.email === username && user.password === password);\n\n      if (user) {\n        // Simulate a delay to mimic server response time (you can remove this in production)\n        setTimeout(() => {\n          AuthService.login(user); // Assuming AuthService.login() accepts a user object as an argument for successful login\n          navigate(\"/profile\");\n          window.location.reload();\n        }, 1000); // 1 second delay\n      } else {\n        setLoading(false);\n        setMessage(\"Invalid username or password.\");\n      }\n    } else {\n      setLoading(false);\n    }\n  };\n\n  const handleShowPassword = () => {\n    setShowPassword((prevShowPassword) => !prevShowPassword);\n  };\n\n  return (\n    <div className=\"col-md-12\">\n      <div className=\"card card-container\">\n        <Form onSubmit={handleLogin} ref={form}>\n          {/* Username input */}\n          <div className=\"form-group\">\n            <label htmlFor=\"username\">Username</label>\n            <Input\n              type=\"text\"\n              className=\"form-control\"\n              name=\"username\"\n              value={username}\n              onChange={onChangeUsername}\n              validations={[required]}\n            />\n          </div>\n\n          {/* Password input with show/hide feature */}\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">Password</label>\n            <div className=\"input-group\">\n              <Input\n                type={showPassword ? \"text\" : \"password\"}\n                className=\"form-control\"\n                name=\"password\"\n                value={password}\n                onChange={onChangePassword}\n                validations={[required]}\n              />\n              <div className=\"input-group-append\">\n                <button\n                  className=\"btn btn-outline-secondary btn-sm\" // Use btn-sm class for smaller button\n                  type=\"button\"\n                  onClick={handleShowPassword}\n                >\n                  {showPassword ? \"Hide\" : \"Show\"}\n                </button>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"form-group\">\n            <button className=\"btn btn-primary btn-block\" disabled={loading}>\n              {loading && (\n                <span className=\"spinner-border spinner-border-sm\"></span>\n              )}\n              <span>Login</span>\n            </button>\n          </div>\n\n          {message && (\n            <div className=\"form-group\">\n              <div className=\"alert alert-danger\" role=\"alert\">\n                {message}\n              </div>\n            </div>\n          )}\n\n          {/* Styled \"Forgot password\" span */}\n          <div className=\"form-group\">\n  <span\n    className=\"Forgetpassword\"\n    onClick={handleShowPassword}\n    style={{ color: \"blue\", marginTop: \"10px\" }}\n  >\n    Forgot password\n  </span>\n</div>\n\n          <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\n        </Form>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}