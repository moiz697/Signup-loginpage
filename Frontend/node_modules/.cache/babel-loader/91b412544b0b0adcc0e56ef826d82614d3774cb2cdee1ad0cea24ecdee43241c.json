{"ast":null,"code":"var _jsxFileName = \"/Users/moiz/Desktop/Signup-loginpage/Frontend/src/components/Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport { isEmail } from \"validator\";\nimport AuthService from \"../services/auth.service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst required = value => {\n  if (!value) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"invalid-feedback d-block\",\n      children: \"This field is required!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this);\n  }\n};\n\nconst validEmail = value => {\n  if (!isEmail(value)) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"invalid-feedback d-block\",\n      children: \"This is not a valid email.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  }\n}; // Validation functions...\n\n\nconst Register = () => {\n  _s();\n\n  const form = useRef();\n  const checkBtn = useRef(); // State and state update functions...\n  // Handle form submission and API call here...\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              onSubmit: handleRegister,\n              ref: form,\n              children: [!successful ? /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"firstName\",\n                    children: \"First Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 48,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Input, {\n                    type: \"text\",\n                    className: \"form-control\",\n                    name: \"firstName\",\n                    value: firstName,\n                    onChange: onChangeFirstName,\n                    validations: [required, vfirstName]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 49,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 47,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-primary btn-block\",\n                    children: \"Sign Up\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 62,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: successful ? \"alert alert-success\" : \"alert alert-danger\",\n                  role: \"alert\",\n                  children: message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 19\n              }, this), !successful && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"already-have-account\",\n                  onClick: handleLoginClick,\n                  style: {\n                    color: \"blue\",\n                    marginTop: \"10px\"\n                  },\n                  children: \"Already have an account? Click here to login.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(CheckButton, {\n                style: {\n                  display: \"none\"\n                },\n                ref: checkBtn\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Register, \"C+RE7DR5zRa4lvd4brg0cIqPKMA=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/moiz/Desktop/Signup-loginpage/Frontend/src/components/Register.js"],"names":["React","useState","useRef","Form","Input","CheckButton","isEmail","AuthService","required","value","validEmail","Register","form","checkBtn","handleRegister","successful","firstName","onChangeFirstName","vfirstName","message","handleLoginClick","color","marginTop","display"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport { isEmail } from \"validator\";\nimport AuthService from \"../services/auth.service\";\n\nconst required = (value) => {\n  if (!value) {\n    return (\n      <div className=\"invalid-feedback d-block\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nconst validEmail = (value) => {\n  if (!isEmail(value)) {\n    return (\n      <div className=\"invalid-feedback d-block\">\n        This is not a valid email.\n      </div>\n    );\n  }\n};\n\n// Validation functions...\n\nconst Register = () => {\n  const form = useRef();\n  const checkBtn = useRef();\n\n  // State and state update functions...\n\n  // Handle form submission and API call here...\n\n  return (\n    <div className=\"container\">\n      <div className=\"row justify-content-center\">\n        <div className=\"col-md-6\">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <Form onSubmit={handleRegister} ref={form}>\n                {!successful ? (\n                  <div>\n                    <div className=\"form-group\">\n                      <label htmlFor=\"firstName\">First Name</label>\n                      <Input\n                        type=\"text\"\n                        className=\"form-control\"\n                        name=\"firstName\"\n                        value={firstName}\n                        onChange={onChangeFirstName}\n                        validations={[required, vfirstName]}\n                      />\n                    </div>\n\n                    {/* Other form fields and validation elements... */}\n\n                    <div className=\"form-group\">\n                      <button className=\"btn btn-primary btn-block\">Sign Up</button>\n                    </div>\n                  </div>\n                ) : (\n                  <div className=\"form-group\">\n                    <div\n                      className={\n                        successful ? \"alert alert-success\" : \"alert alert-danger\"\n                      }\n                      role=\"alert\"\n                    >\n                      {message}\n                    </div>\n                  </div>\n                )}\n\n                {/* Conditionally render the \"Already have an account?\" span */}\n                {!successful && (\n                  <div className=\"form-group\">\n                    <span\n                      className=\"already-have-account\"\n                      onClick={handleLoginClick}\n                      style={{ color: \"blue\", marginTop: \"10px\" }}\n                    >\n                      Already have an account? Click here to login.\n                    </span>\n                  </div>\n                )}\n\n                <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\n              </Form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}