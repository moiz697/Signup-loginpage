{"ast":null,"code":"var _jsxFileName = \"/Users/moiz/Desktop/Signup-loginpage/Frontend/src/components/Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport { isEmail } from \"validator\";\nimport AuthService from \"../services/auth.service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst required = value => {\n  if (!value) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"invalid-feedback d-block\",\n      children: \"This field is required!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this);\n  }\n}; // Other validation functions...\n\n\nconst Register = () => {\n  _s();\n\n  const form = useRef();\n  const checkBtn = useRef();\n  const [vfirstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [verifyPassword, setVerifyPassword] = useState(\"\");\n  const [successful, setSuccessful] = useState(false);\n  const [message, setMessage] = useState(\"\");\n\n  const onChangeFirstName = e => {\n    setFirstName(e.target.value);\n  }; // Other onChange functions...\n\n\n  const handleRegister = e => {\n    e.preventDefault();\n    setMessage(\"\");\n    setSuccessful(false);\n    form.current.validateAll();\n\n    if (checkBtn.current.context._errors.length === 0) {\n      AuthService.register(firstName, lastName, email, password).then(response => {\n        setMessage(response.data.message);\n        setSuccessful(true); // Optionally, you can redirect to a success page after successful registration\n        // Replace '/success' with the path to your success page\n\n        window.location.href = '/success';\n      }).catch(error => {\n        const resMessage = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n        setMessage(resMessage);\n        setSuccessful(false);\n      });\n    }\n  };\n\n  const handleLoginClick = () => {\n    window.location.href = '/login'; // Replace '/login' with the correct path to your login page\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              onSubmit: handleRegister,\n              ref: form,\n              children: [!successful ? /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"firstName\",\n                    children: \"First Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 81,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Input, {\n                    type: \"text\",\n                    className: \"form-control\",\n                    name: \"firstName\",\n                    value: firstName,\n                    onChange: onChangeFirstName,\n                    validations: [required, vfirstName]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 82,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-primary btn-block\",\n                    children: \"Sign Up\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: successful ? \"alert alert-success\" : \"alert alert-danger\",\n                  role: \"alert\",\n                  children: message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 19\n              }, this), !successful && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"already-have-account\",\n                  onClick: handleLoginClick,\n                  style: {\n                    color: \"blue\",\n                    marginTop: \"10px\"\n                  },\n                  children: \"Already have an account? Click here to login.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(CheckButton, {\n                style: {\n                  display: \"none\"\n                },\n                ref: checkBtn\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Register, \"jLqbW/X9NUDTVRNWYk9s9R3ztfg=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/moiz/Desktop/Signup-loginpage/Frontend/src/components/Register.js"],"names":["React","useState","useRef","Form","Input","CheckButton","isEmail","AuthService","required","value","Register","form","checkBtn","vfirstName","setFirstName","lastName","setLastName","email","setEmail","password","setPassword","verifyPassword","setVerifyPassword","successful","setSuccessful","message","setMessage","onChangeFirstName","e","target","handleRegister","preventDefault","current","validateAll","context","_errors","length","register","firstName","then","response","data","window","location","href","catch","error","resMessage","toString","handleLoginClick","color","marginTop","display"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport { isEmail } from \"validator\";\nimport AuthService from \"../services/auth.service\";\n\nconst required = (value) => {\n  if (!value) {\n    return (\n      <div className=\"invalid-feedback d-block\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\n// Other validation functions...\n\nconst Register = () => {\n  const form = useRef();\n  const checkBtn = useRef();\n\n  const [vfirstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [verifyPassword, setVerifyPassword] = useState(\"\");\n  const [successful, setSuccessful] = useState(false);\n  const [message, setMessage] = useState(\"\");\n\n  const onChangeFirstName = (e) => {\n    setFirstName(e.target.value);\n  };\n\n  // Other onChange functions...\n\n  const handleRegister = (e) => {\n    e.preventDefault();\n\n    setMessage(\"\");\n    setSuccessful(false);\n\n    form.current.validateAll();\n\n    if (checkBtn.current.context._errors.length === 0) {\n      AuthService.register(firstName, lastName, email, password)\n        .then((response) => {\n          setMessage(response.data.message);\n          setSuccessful(true);\n          // Optionally, you can redirect to a success page after successful registration\n          // Replace '/success' with the path to your success page\n          window.location.href = '/success';\n        })\n        .catch((error) => {\n          const resMessage =\n            (error.response && error.response.data && error.response.data.message) ||\n            error.message ||\n            error.toString();\n\n          setMessage(resMessage);\n          setSuccessful(false);\n        });\n    }\n  };\n\n  const handleLoginClick = () => {\n    window.location.href = '/login'; // Replace '/login' with the correct path to your login page\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"row justify-content-center\">\n        <div className=\"col-md-6\">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <Form onSubmit={handleRegister} ref={form}>\n                {!successful ? (\n                  <div>\n                    <div className=\"form-group\">\n                      <label htmlFor=\"firstName\">First Name</label>\n                      <Input\n                        type=\"text\"\n                        className=\"form-control\"\n                        name=\"firstName\"\n                        value={firstName}\n                        onChange={onChangeFirstName}\n                        validations={[required, vfirstName]}\n                      />\n                    </div>\n\n                    {/* Other form fields and validation elements */}\n\n                    <div className=\"form-group\">\n                      <button className=\"btn btn-primary btn-block\">Sign Up</button>\n                    </div>\n                  </div>\n                ) : (\n                  <div className=\"form-group\">\n                    <div\n                      className={\n                        successful ? \"alert alert-success\" : \"alert alert-danger\"\n                      }\n                      role=\"alert\"\n                    >\n                      {message}\n                    </div>\n                  </div>\n                )}\n\n                {/* Conditionally render the \"Already have an account?\" span */}\n                {!successful && (\n                  <div className=\"form-group\">\n                    <span\n                      className=\"already-have-account\"\n                      onClick={handleLoginClick}\n                      style={{ color: \"blue\", marginTop: \"10px\" }}\n                    >\n                      Already have an account? Click here to login.\n                    </span>\n                  </div>\n                )}\n\n                <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\n              </Form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}