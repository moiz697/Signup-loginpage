{"ast":null,"code":"var _jsxFileName = \"/Users/moiz/Desktop/Signup-loginpage/src/components/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport AuthService from \"../services/auth.service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst required = value => {\n  if (!value) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"invalid-feedback d-block\",\n      children: \"This field is required!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this);\n  }\n};\n\nconst Login = () => {\n  _s();\n\n  const form = useRef();\n  const checkBtn = useRef();\n  const navigate = useNavigate();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [loginClicked, setLoginClicked] = useState(false); // New state for tracking the login click\n\n  const [showPassword, setShowPassword] = useState(false); // New state for the show password feature\n\n  const onChangeUsername = e => {\n    setUsername(e.target.value);\n  };\n\n  const onChangePassword = e => {\n    setPassword(e.target.value);\n  };\n\n  const handleLogin = e => {\n    e.preventDefault();\n    setMessage(\"\");\n    setLoading(true);\n    form.current.validateAll();\n\n    if (checkBtn.current.context._errors.length === 0) {\n      AuthService.login(username, password).then(() => {\n        navigate(\"/profile\");\n        window.location.reload();\n      }, error => {\n        const resMessage = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n        setLoading(false);\n        setMessage(resMessage);\n      });\n    } else {\n      setLoading(false);\n    }\n  };\n\n  const handleLoginClick = () => {\n    // Update the loginClicked state to true\n    setLoginClicked(true); // Redirect the user to the login page after a small delay (optional)\n\n    setTimeout(() => {\n      window.location.href = '/forgot-password'; // Replace '/login' with the correct path to your login page\n    }, 500); // Delay the navigation to give time for the success message to show (optional)\n  };\n\n  const handleShowPassword = () => {\n    setShowPassword(prevShowPassword => !prevShowPassword);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-md-12\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card card-container\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleLogin,\n        ref: form,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            className: \"form-control\",\n            name: \"username\",\n            value: username,\n            onChange: onChangeUsername,\n            validations: [required]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              type: showPassword ? \"text\" : \"password\",\n              className: \"form-control\",\n              name: \"password\",\n              value: password,\n              onChange: onChangePassword,\n              validations: [required]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group-append\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-outline-secondary\",\n                type: \"button\",\n                onClick: handleShowPassword,\n                children: showPassword ? \"Hide\" : \"Show\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary btn-block\",\n            disabled: loading,\n            children: [loading && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"spinner-border spinner-border-sm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert alert-danger\",\n            role: \"alert\",\n            children: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"Forgetpassword\",\n            onClick: handleLoginClick,\n            style: {\n              color: \"blue\",\n              marginTop: \"10px\"\n            },\n            children: \"Forgot password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(CheckButton, {\n          style: {\n            display: \"none\"\n          },\n          ref: checkBtn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"vVLGXu79e4jAJaAGWdScR7DUIQQ=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/moiz/Desktop/Signup-loginpage/src/components/Login.js"],"names":["React","useState","useRef","useNavigate","Form","Input","CheckButton","AuthService","required","value","Login","form","checkBtn","navigate","username","setUsername","password","setPassword","loading","setLoading","message","setMessage","loginClicked","setLoginClicked","showPassword","setShowPassword","onChangeUsername","e","target","onChangePassword","handleLogin","preventDefault","current","validateAll","context","_errors","length","login","then","window","location","reload","error","resMessage","response","data","toString","handleLoginClick","setTimeout","href","handleShowPassword","prevShowPassword","color","marginTop","display"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,IAAP,MAAiB,6BAAjB;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AAEA,OAAOC,WAAP,MAAwB,0BAAxB;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,MAAI,CAACA,KAAL,EAAY;AACV,wBACE;AAAK,MAAA,SAAS,EAAC,0BAAf;AAAA,gBAA0C;AAA1C;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;AACF,CARD;;AAUA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAMC,IAAI,GAAGT,MAAM,EAAnB;AACA,QAAMU,QAAQ,GAAGV,MAAM,EAAvB;AACA,QAAMW,QAAQ,GAAGV,WAAW,EAA5B;AAEA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACe,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACiB,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACmB,OAAD,EAAUC,UAAV,IAAwBpB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACqB,YAAD,EAAeC,eAAf,IAAkCtB,QAAQ,CAAC,KAAD,CAAhD,CATkB,CASuC;;AACzD,QAAM,CAACuB,YAAD,EAAeC,eAAf,IAAkCxB,QAAQ,CAAC,KAAD,CAAhD,CAVkB,CAUuC;;AAEzD,QAAMyB,gBAAgB,GAAIC,CAAD,IAAO;AAC9BZ,IAAAA,WAAW,CAACY,CAAC,CAACC,MAAF,CAASnB,KAAV,CAAX;AACD,GAFD;;AAIA,QAAMoB,gBAAgB,GAAIF,CAAD,IAAO;AAC9BV,IAAAA,WAAW,CAACU,CAAC,CAACC,MAAF,CAASnB,KAAV,CAAX;AACD,GAFD;;AAIA,QAAMqB,WAAW,GAAIH,CAAD,IAAO;AACzBA,IAAAA,CAAC,CAACI,cAAF;AAEAV,IAAAA,UAAU,CAAC,EAAD,CAAV;AACAF,IAAAA,UAAU,CAAC,IAAD,CAAV;AAEAR,IAAAA,IAAI,CAACqB,OAAL,CAAaC,WAAb;;AAEA,QAAIrB,QAAQ,CAACoB,OAAT,CAAiBE,OAAjB,CAAyBC,OAAzB,CAAiCC,MAAjC,KAA4C,CAAhD,EAAmD;AACjD7B,MAAAA,WAAW,CAAC8B,KAAZ,CAAkBvB,QAAlB,EAA4BE,QAA5B,EAAsCsB,IAAtC,CACE,MAAM;AACJzB,QAAAA,QAAQ,CAAC,UAAD,CAAR;AACA0B,QAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,OAJH,EAKGC,KAAD,IAAW;AACT,cAAMC,UAAU,GACbD,KAAK,CAACE,QAAN,IACCF,KAAK,CAACE,QAAN,CAAeC,IADhB,IAECH,KAAK,CAACE,QAAN,CAAeC,IAAf,CAAoBzB,OAFtB,IAGAsB,KAAK,CAACtB,OAHN,IAIAsB,KAAK,CAACI,QAAN,EALF;AAOA3B,QAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,QAAAA,UAAU,CAACsB,UAAD,CAAV;AACD,OAfH;AAiBD,KAlBD,MAkBO;AACLxB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,GA7BD;;AA+BA,QAAM4B,gBAAgB,GAAG,MAAM;AAC7B;AACAxB,IAAAA,eAAe,CAAC,IAAD,CAAf,CAF6B,CAG7B;;AACAyB,IAAAA,UAAU,CAAC,MAAM;AACfT,MAAAA,MAAM,CAACC,QAAP,CAAgBS,IAAhB,GAAuB,kBAAvB,CADe,CAC4B;AAC5C,KAFS,EAEP,GAFO,CAAV,CAJ6B,CAMpB;AACV,GAPD;;AASA,QAAMC,kBAAkB,GAAG,MAAM;AAC/BzB,IAAAA,eAAe,CAAE0B,gBAAD,IAAsB,CAACA,gBAAxB,CAAf;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,6BAKE,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAErB,WAAhB;AAA6B,QAAA,GAAG,EAAEnB,IAAlC;AAAA,gCAEE;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,kCACE;AAAO,YAAA,OAAO,EAAC,UAAf;AAAA,sBAA0B;AAA1B;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,KAAD;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,SAAS,EAAC,cAFZ;AAGE,YAAA,IAAI,EAAC,UAHP;AAIE,YAAA,KAAK,EAAEG,QAJT;AAKE,YAAA,QAAQ,EAAEY,gBALZ;AAME,YAAA,WAAW,EAAE,CAAClB,QAAD;AANf;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAeE;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,kCACE;AAAO,YAAA,OAAO,EAAC,UAAf;AAAA,sBAA0B;AAA1B;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,oCACE,QAAC,KAAD;AACE,cAAA,IAAI,EAAEgB,YAAY,GAAG,MAAH,GAAY,UADhC;AAEE,cAAA,SAAS,EAAC,cAFZ;AAGE,cAAA,IAAI,EAAC,UAHP;AAIE,cAAA,KAAK,EAAER,QAJT;AAKE,cAAA,QAAQ,EAAEa,gBALZ;AAME,cAAA,WAAW,EAAE,CAACrB,QAAD;AANf;AAAA;AAAA;AAAA;AAAA,oBADF,eASE;AAAK,cAAA,SAAS,EAAC,oBAAf;AAAA,qCACE;AACE,gBAAA,SAAS,EAAC,2BADZ;AAEE,gBAAA,IAAI,EAAC,QAFP;AAGE,gBAAA,OAAO,EAAE0C,kBAHX;AAAA,0BAKG1B,YAAY,GAAG,MAAH,GAAY;AAL3B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBATF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfF,eAsCE;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,iCACE;AAAQ,YAAA,SAAS,EAAC,2BAAlB;AAA8C,YAAA,QAAQ,EAAEN,OAAxD;AAAA,uBACGA,OAAO,iBACN;AAAM,cAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAIE;AAAA,wBAAM;AAAN;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAtCF,EA+CGE,OAAO,iBACN;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,oBAAf;AAAoC,YAAA,IAAI,EAAC,OAAzC;AAAA,sBACGA;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAhDJ,eAuDA;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,iCACE;AACE,YAAA,SAAS,EAAC,gBADZ;AAEE,YAAA,OAAO,EAAE2B,gBAFX;AAGE,YAAA,KAAK,EAAE;AAAEK,cAAAA,KAAK,EAAE,MAAT;AAAiBC,cAAAA,SAAS,EAAE;AAA5B,aAHT;AAAA,sBAIC;AAJD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAvDA,eAiEE,QAAC,WAAD;AAAa,UAAA,KAAK,EAAE;AAAEC,YAAAA,OAAO,EAAE;AAAX,WAApB;AAAyC,UAAA,GAAG,EAAE1C;AAA9C;AAAA;AAAA;AAAA;AAAA,gBAjEF;AAAA;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA6ED,CA7ID;;GAAMF,K;UAGaP,W;;;KAHbO,K;AA+IN,eAAeA,KAAf","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\n\nimport AuthService from \"../services/auth.service\";\n\nconst required = (value) => {\n  if (!value) {\n    return (\n      <div className=\"invalid-feedback d-block\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nconst Login = () => {\n  const form = useRef();\n  const checkBtn = useRef();\n  const navigate = useNavigate();\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [loginClicked, setLoginClicked] = useState(false); // New state for tracking the login click\n  const [showPassword, setShowPassword] = useState(false); // New state for the show password feature\n\n  const onChangeUsername = (e) => {\n    setUsername(e.target.value);\n  };\n\n  const onChangePassword = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n\n    setMessage(\"\");\n    setLoading(true);\n\n    form.current.validateAll();\n\n    if (checkBtn.current.context._errors.length === 0) {\n      AuthService.login(username, password).then(\n        () => {\n          navigate(\"/profile\");\n          window.location.reload();\n        },\n        (error) => {\n          const resMessage =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n\n          setLoading(false);\n          setMessage(resMessage);\n        }\n      );\n    } else {\n      setLoading(false);\n    }\n  };\n\n  const handleLoginClick = () => {\n    // Update the loginClicked state to true\n    setLoginClicked(true);\n    // Redirect the user to the login page after a small delay (optional)\n    setTimeout(() => {\n      window.location.href = '/forgot-password'; // Replace '/login' with the correct path to your login page\n    }, 500); // Delay the navigation to give time for the success message to show (optional)\n  };\n\n  const handleShowPassword = () => {\n    setShowPassword((prevShowPassword) => !prevShowPassword);\n  };\n\n  return (\n    <div className=\"col-md-12\">\n      <div className=\"card card-container\">\n        {/* Other form elements... */}\n        \n      \n\n        <Form onSubmit={handleLogin} ref={form}>\n          {/* Username input */}\n          <div className=\"form-group\">\n            <label htmlFor=\"username\">Username</label>\n            <Input\n              type=\"text\"\n              className=\"form-control\"\n              name=\"username\"\n              value={username}\n              onChange={onChangeUsername}\n              validations={[required]}\n            />\n          </div>\n\n          {/* Password input with show/hide feature */}\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">Password</label>\n            <div className=\"input-group\">\n              <Input\n                type={showPassword ? \"text\" : \"password\"}\n                className=\"form-control\"\n                name=\"password\"\n                value={password}\n                onChange={onChangePassword}\n                validations={[required]}\n              />\n              <div className=\"input-group-append\">\n                <button\n                  className=\"btn btn-outline-secondary\"\n                  type=\"button\"\n                  onClick={handleShowPassword}\n                >\n                  {showPassword ? \"Hide\" : \"Show\"}\n                </button>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"form-group\">\n            <button className=\"btn btn-primary btn-block\" disabled={loading}>\n              {loading && (\n                <span className=\"spinner-border spinner-border-sm\"></span>\n              )}\n              <span>Login</span>\n            </button>\n          </div>\n\n          {message && (\n            <div className=\"form-group\">\n              <div className=\"alert alert-danger\" role=\"alert\">\n                {message}\n              </div>\n            </div>\n          )}\n            {/* Styled \"Forgot password\" span */}\n        <div className=\"form-group\">\n          <span\n            className=\"Forgetpassword\"\n            onClick={handleLoginClick}\n            style={{ color: \"blue\", marginTop: \"10px\" }}\n          >\n            Forgot password\n          </span>\n        </div>\n\n          <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\n        </Form>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}