{"ast":null,"code":"import _asyncToGenerator from\"/Users/moiz/Desktop/Signup-loginpage/Frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/moiz/Desktop/Signup-loginpage/Frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/Users/moiz/Desktop/Signup-loginpage/Frontend/node_modules/@babel/runtime/regenerator/index.js\";import React,{useState}from'react';import'bootstrap/dist/css/bootstrap.min.css';// Simulate API call to verify the email\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var mockEmailVerification=function mockEmailVerification(email){return new Promise(function(resolve,reject){setTimeout(function(){if(email==='test@example.com'){resolve({success:true});}else{reject({message:'Email not found in the database'});}},1000);});};var ForgotPasswordForm=function ForgotPasswordForm(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),email=_useState2[0],setEmail=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),error=_useState4[0],setError=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isEmailSent=_useState6[0],setIsEmailSent=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),isSubmitting=_useState8[0],setIsSubmitting=_useState8[1];var handleResetPassword=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:e.preventDefault();setError('');setIsSubmitting(true);_context.prev=3;_context.next=6;return mockEmailVerification(email);case 6:response=_context.sent;if(response.success){setIsEmailSent(true);}else{setError('Email not found in the database');}_context.next=13;break;case 10:_context.prev=10;_context.t0=_context[\"catch\"](3);setError('Error occurred while processing the request');case 13:_context.prev=13;setIsSubmitting(false);return _context.finish(13);case 16:case\"end\":return _context.stop();}},_callee,null,[[3,10,13,16]]);}));return function handleResetPassword(_x){return _ref.apply(this,arguments);};}();return/*#__PURE__*/_jsx(\"div\",{className:\"container mt-5\",children:/*#__PURE__*/_jsx(\"div\",{className:\"row justify-content-center\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col-md-6\",children:/*#__PURE__*/_jsx(\"div\",{className:\"card\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"card-body\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"card-title\",children:\"Forgot Password\"}),isEmailSent?/*#__PURE__*/_jsx(\"div\",{className:\"alert alert-success\",role:\"alert\",children:\"Reset link has been sent to your email.\"}):/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleResetPassword,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"email\",children:\"Email\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",className:\"form-control\",id:\"email\",placeholder:\"Enter your email\",value:email,onChange:function onChange(e){return setEmail(e.target.value);},disabled:isSubmitting})]}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"alert alert-danger\",role:\"alert\",children:error}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-primary\",disabled:isSubmitting,children:isSubmitting?'Submitting...':'Submit'})]})]})})})})});};export default ForgotPasswordForm;","map":{"version":3,"sources":["/Users/moiz/Desktop/Signup-loginpage/Frontend/src/components/Forgetpassword.js"],"names":["React","useState","mockEmailVerification","email","Promise","resolve","reject","setTimeout","success","message","ForgotPasswordForm","setEmail","error","setError","isEmailSent","setIsEmailSent","isSubmitting","setIsSubmitting","handleResetPassword","e","preventDefault","response","target","value"],"mappings":"4YAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAO,sCAAP,CAEA;wFACA,GAAMC,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,CAACC,KAAD,CAAW,CACvC,MAAO,IAAIC,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CACtCC,UAAU,CAAC,UAAM,CACf,GAAIJ,KAAK,GAAK,kBAAd,CAAkC,CAChCE,OAAO,CAAC,CAAEG,OAAO,CAAE,IAAX,CAAD,CAAP,CACD,CAFD,IAEO,CACLF,MAAM,CAAC,CAAEG,OAAO,CAAE,iCAAX,CAAD,CAAN,CACD,CACF,CANS,CAMP,IANO,CAAV,CAOD,CARM,CAAP,CASD,CAVD,CAYA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,EAAM,CAC/B,cAA0BT,QAAQ,CAAC,EAAD,CAAlC,wCAAOE,KAAP,eAAcQ,QAAd,eACA,eAA0BV,QAAQ,CAAC,EAAD,CAAlC,yCAAOW,KAAP,eAAcC,QAAd,eACA,eAAsCZ,QAAQ,CAAC,KAAD,CAA9C,yCAAOa,WAAP,eAAoBC,cAApB,eACA,eAAwCd,QAAQ,CAAC,KAAD,CAAhD,yCAAOe,YAAP,eAAqBC,eAArB,eAEA,GAAMC,CAAAA,mBAAmB,0FAAG,iBAAOC,CAAP,8HAC1BA,CAAC,CAACC,cAAF,GAEAP,QAAQ,CAAC,EAAD,CAAR,CACAI,eAAe,CAAC,IAAD,CAAf,CAJ0B,sCAODf,CAAAA,qBAAqB,CAACC,KAAD,CAPpB,QAOlBkB,QAPkB,eASxB,GAAIA,QAAQ,CAACb,OAAb,CAAsB,CACpBO,cAAc,CAAC,IAAD,CAAd,CACD,CAFD,IAEO,CACLF,QAAQ,CAAC,iCAAD,CAAR,CACD,CAbuB,iFAexBA,QAAQ,CAAC,6CAAD,CAAR,CAfwB,yBAiBxBI,eAAe,CAAC,KAAD,CAAf,CAjBwB,qGAAH,kBAAnBC,CAAAA,mBAAmB,4CAAzB,CAqBA,mBACE,YAAK,SAAS,CAAC,gBAAf,uBACE,YAAK,SAAS,CAAC,4BAAf,uBACE,YAAK,SAAS,CAAC,UAAf,uBACE,YAAK,SAAS,CAAC,MAAf,uBACE,aAAK,SAAS,CAAC,WAAf,wBACE,WAAI,SAAS,CAAC,YAAd,UAA2B,iBAA3B,EADF,CAEGJ,WAAW,cACV,YAAK,SAAS,CAAC,qBAAf,CAAqC,IAAI,CAAC,OAA1C,UAAkD,yCAAlD,EADU,cAKV,cAAM,QAAQ,CAAEI,mBAAhB,wBACE,aAAK,SAAS,CAAC,YAAf,wBACE,cAAO,OAAO,CAAC,OAAf,UAAuB,OAAvB,EADF,cAEE,cACE,IAAI,CAAC,OADP,CAEE,SAAS,CAAC,cAFZ,CAGE,EAAE,CAAC,OAHL,CAIE,WAAW,CAAC,kBAJd,CAKE,KAAK,CAAEf,KALT,CAME,QAAQ,CAAE,kBAACgB,CAAD,QAAOR,CAAAA,QAAQ,CAACQ,CAAC,CAACG,MAAF,CAASC,KAAV,CAAf,EANZ,CAOE,QAAQ,CAAEP,YAPZ,EAFF,GADF,CAaGJ,KAAK,eAAI,YAAK,SAAS,CAAC,oBAAf,CAAoC,IAAI,CAAC,OAAzC,UAAkDA,KAAlD,EAbZ,cAcE,eAAQ,IAAI,CAAC,QAAb,CAAsB,SAAS,CAAC,iBAAhC,CAAkD,QAAQ,CAAEI,YAA5D,UACGA,YAAY,CAAG,eAAH,CAAqB,QADpC,EAdF,GAPJ,GADF,EADF,EADF,EADF,EADF,CAqCD,CAhED,CAkEA,cAAeN,CAAAA,kBAAf","sourcesContent":["import React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n// Simulate API call to verify the email\nconst mockEmailVerification = (email) => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (email === 'test@example.com') {\n        resolve({ success: true });\n      } else {\n        reject({ message: 'Email not found in the database' });\n      }\n    }, 1000);\n  });\n};\n\nconst ForgotPasswordForm = () => {\n  const [email, setEmail] = useState('');\n  const [error, setError] = useState('');\n  const [isEmailSent, setIsEmailSent] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleResetPassword = async (e) => {\n    e.preventDefault();\n\n    setError('');\n    setIsSubmitting(true);\n\n    try {\n      const response = await mockEmailVerification(email);\n\n      if (response.success) {\n        setIsEmailSent(true);\n      } else {\n        setError('Email not found in the database');\n      }\n    } catch (error) {\n      setError('Error occurred while processing the request');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  return (\n    <div className=\"container mt-5\">\n      <div className=\"row justify-content-center\">\n        <div className=\"col-md-6\">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <h4 className=\"card-title\">Forgot Password</h4>\n              {isEmailSent ? (\n                <div className=\"alert alert-success\" role=\"alert\">\n                  Reset link has been sent to your email.\n                </div>\n              ) : (\n                <form onSubmit={handleResetPassword}>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"email\">Email</label>\n                    <input\n                      type=\"email\"\n                      className=\"form-control\"\n                      id=\"email\"\n                      placeholder=\"Enter your email\"\n                      value={email}\n                      onChange={(e) => setEmail(e.target.value)}\n                      disabled={isSubmitting}\n                    />\n                  </div>\n                  {error && <div className=\"alert alert-danger\" role=\"alert\">{error}</div>}\n                  <button type=\"submit\" className=\"btn btn-primary\" disabled={isSubmitting}>\n                    {isSubmitting ? 'Submitting...' : 'Submit'}\n                  </button>\n                </form>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ForgotPasswordForm;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}